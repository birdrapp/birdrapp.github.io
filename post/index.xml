<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Post-rsses on Birdr</title>
    <link>http://blog.birdr.co.uk/post/index.xml</link>
    <description>Recent content in Post-rsses on Birdr</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Thu, 22 Dec 2016 16:51:47 +0000</lastBuildDate>
    <atom:link href="http://blog.birdr.co.uk/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Tools of the trade</title>
      <link>http://blog.birdr.co.uk/post/tools-of-the-trade/</link>
      <pubDate>Thu, 22 Dec 2016 16:51:47 +0000</pubDate>
      
      <guid>http://blog.birdr.co.uk/post/tools-of-the-trade/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;http://blog.birdr.co.uk/images/post/tools-of-the-trade.jpg&#34; alt=&#34;A set of old wood working tools... totally unsuitable for web development&#34; /&gt;&lt;/p&gt;

&lt;p&gt;When I initially built Birdr in 2011, I built it using &lt;a href=&#34;http://rubyonrails.org/&#34;&gt;Ruby on Rails&lt;/a&gt;. These were new technologies to me at the time and required a substantial amount of learning. Birdr is a great project for learning new technologies. It is complex enough to require me to have a firm grasp of a language, yet remains simple enough to allow me to produce &lt;em&gt;something&lt;/em&gt; relatively quickly.&lt;/p&gt;

&lt;p&gt;To this day, Ruby remains my favourite programming language. It has a satisfying syntax and malleable design, which lets you create code that reads almost like prose. I haven&amp;rsquo;t had the opportunity to use it in my day job yet, but it is my go-to tool for personal projects. If you are interested in programming and haven&amp;rsquo;t tried Ruby yet, I would &lt;a href=&#34;https://pragprog.com/book/rails5/agile-web-development-with-rails-5&#34;&gt;strongly encourage you to do so&lt;/a&gt;&amp;hellip; you won&amp;rsquo;t regret it.&lt;/p&gt;

&lt;p&gt;Rails is a framework built on Ruby that allows a developer to get up and running extremely quickly. It became famous for it&amp;rsquo;s &amp;ldquo;How to build a blog in 15 minutes&amp;rdquo; tutorial. However, the best thing about Rails, in my opinion, is the community. There is a strong focus on testing and &lt;a href=&#34;https://en.wikipedia.org/wiki/Test-driven_development&#34;&gt;TDD&lt;/a&gt; within the Rails community - both good practices and something I strongly believe in. Furthermore, there are packages, or &lt;a href=&#34;https://rubygems.org/&#34;&gt;Gems&lt;/a&gt;, for nearly anything. From &lt;a href=&#34;https://rubygems.org/gems/devise/versions/4.2.0&#34;&gt;user authentication&lt;/a&gt; to &lt;a href=&#34;https://rubygems.org/gems/darksky/versions/1.0.5&#34;&gt;weather reports&lt;/a&gt; - Rails has it all.&lt;/p&gt;

&lt;h3 id=&#34;out-with-the-old-and-in-with-the-new&#34;&gt;Out with the old and in with the new&lt;/h3&gt;

&lt;p&gt;Ruby on Rails is very much the kitchen sink of development. This time around I am looking to adopt a pattern that I used successfully at the BBC - &lt;a href=&#34;http://www.martinfowler.com/articles/microservices.html&#34;&gt;Microservices&lt;/a&gt;. At a high level, the idea behind Microservices is that you split your application into smaller, logical chunks. What used to be a single monolithic application becomes a loosely coupled web of services that form a whole. For an architecture such as this, Rails does not make sense.&lt;/p&gt;

&lt;p&gt;There are a number of problems posed by using Microservices too. Deploying, monitoring and maintaining multiple services rather than 1 can be a heavy burden on a team. These are all things that I will try to solve and document during the development of Birdr. To help me, I have provisionally selected a number of technologies.&lt;/p&gt;

&lt;h4 id=&#34;docker-kubernetes&#34;&gt;Docker &amp;amp; Kubernetes&lt;/h4&gt;

&lt;p&gt;Containers. You can&amp;rsquo;t avoid them nowadays. The rise of &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; has been one of the quickest I can remember. I didn&amp;rsquo;t use it at the BBC, partly due to the maturity of the project and partly due to other constraints. However, with tools such as &lt;a href=&#34;http://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt; (k8s) emerging, containers have become a far more compelling proposition. I will use Birdr as an opportunity to work with k8s and Docker to host the Microservices that I develop.&lt;/p&gt;

&lt;h4 id=&#34;go&#34;&gt;Go&lt;/h4&gt;

&lt;p&gt;Another popular technology at the moment is &lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt; (or Golang). Developed by Google, it is a compiled, statically typed language. For the non-techies among you, this means it is worlds apart from Ruby - which is an interpreted, dynamically typed language. As it is substantially different to any language I have used recently it will place me firmly outside of my comfort zone.&lt;/p&gt;

&lt;h4 id=&#34;linkerd&#34;&gt;linkerd&lt;/h4&gt;

&lt;p&gt;Building a Microservice architecture introduces a lot more communication. What was once an internal function call becomes a network request. And, as anyone will tell you, networks are inherently unreliable. Requests will fail or slow down seemingly at random, which can cause catastrophic failures when you&amp;rsquo;re operating at scale. There are a number of tools at your disposal to help you build a &lt;em&gt;robust&lt;/em&gt; system such as circuit breakers, retries and bulkheads. At the BBC we built a Node.js library (&lt;a href=&#34;https://github.com/bbc/flashheart&#34;&gt;which has since been open sourced&lt;/a&gt;) to handle this for us. The downside of this approach is that it limits you to using Node.js. To create a Microservice in another language would require you to write a similar library. This is an anti-pattern covered in detail in &lt;a href=&#34;https://www.microservices.com/talks/dont-build-a-distributed-monolith/&#34;&gt;this talk by Ben Christensen&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;An alternative approach I &lt;a href=&#34;https://monzo.com/blog/2016/09/19/building-a-modern-bank-backend/&#34;&gt;discovered being used by Monzo&lt;/a&gt; is to use a service called &lt;a href=&#34;https://linkerd.io/&#34;&gt;linkerd&lt;/a&gt;. Essentially, your services communicate with linkerd, which is running locally and &lt;em&gt;it&lt;/em&gt; handles communication across the network - including retries, circuit breakers and monitoring.&lt;/p&gt;

&lt;p&gt;I hadnâ€™t heard about this before, so I am really excited to try it out and see how it works.&lt;/p&gt;

&lt;h4 id=&#34;prometheus&#34;&gt;Prometheus&lt;/h4&gt;

&lt;p&gt;The final technology I want to call out is &lt;a href=&#34;https://prometheus.io/&#34;&gt;Prometheus&lt;/a&gt;. When you&amp;rsquo;re running 20+ services in production, monitoring is essential. I&amp;rsquo;ve had great success using &lt;a href=&#34;https://github.com/etsy/statsd&#34;&gt;StatsD&lt;/a&gt; and &lt;a href=&#34;https://graphiteapp.org/&#34;&gt;Graphite&lt;/a&gt; before but wanted to take this opportunity to try something different.&lt;/p&gt;

&lt;p&gt;No doubt there will be other technologies I will want or need to use during the next year. One of the benefits of building using Microservices and linkerd is that I am free to choose the language of my choice. I hope I manage to avoid the inevitable lure of returning to my comfort zone with Ruby.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Note: If you&amp;rsquo;re reading this and don&amp;rsquo;t understand a word I&amp;rsquo;ve just said - fear not. I hope to blog about each of these technologies individually at a level that even my dad could understand&amp;hellip; and he&amp;rsquo;s about as technical as a Woodpigeon!&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s the big idea?</title>
      <link>http://blog.birdr.co.uk/post/whats-the-big-idea/</link>
      <pubDate>Sat, 17 Dec 2016 14:17:56 +0000</pubDate>
      
      <guid>http://blog.birdr.co.uk/post/whats-the-big-idea/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;http://blog.birdr.co.uk/images/post/whats-the-big-idea.jpg&#34; alt=&#34;An owl deep in contemplation&#34; /&gt;&lt;/p&gt;

&lt;p&gt;What is it about Birdr that keeps me coming back? I guess I have this feeling that, if done right, Birdr could become as ubiquitous to birding as YouTube is to videos. It would serve as the place to go to keep all your lists &amp;amp; photos. The place to find out about rare birds in your area. The place to read about birding in remote locations and the place to share knowledge and offer encouragement to new birders. This is the vision I have and what keeps me coming back.&lt;/p&gt;

&lt;p&gt;Below is a list of features that I hope to add to Birdr:&lt;/p&gt;

&lt;h3 id=&#34;bird-records&#34;&gt;Bird Records&lt;/h3&gt;

&lt;p&gt;Every birding application needs the ability to add records. The key to success here will be providing a simple interface. If recording birds is too much effort people won&amp;rsquo;t do it. Birdr should allow you to record as little or as much detail as you wish.&lt;/p&gt;

&lt;h4 id=&#34;weather&#34;&gt;Weather&lt;/h4&gt;

&lt;p&gt;One of the cool things I&amp;rsquo;ve added in the &lt;a href=&#34;http://nenbc.co.uk/&#34;&gt;NENBC&lt;/a&gt; application is an automatic weather report. If you add the location and date/time of your record we can fetch the weather using a neat service called &lt;a href=&#34;https://darksky.net/dev/&#34;&gt;DarkSky&lt;/a&gt;. Weather actually plays an important part in bird watching. On windy days you will often find rarities along the coast that have been blown over the seas.&lt;/p&gt;

&lt;h3 id=&#34;lists&#34;&gt;Lists&lt;/h3&gt;

&lt;p&gt;Birding is all about keeping lists. One of the must-have lists for birders is the life list. For a UK birder, this is the list of birds that you have seen within the UK shores since you started birding. Serious birders will have seen upwards of 400 species. Once you get more into birding you might start finding you keep year lists, garden lists, lists specific to a particular county etc. Most applications, and &lt;a href=&#34;http://birdlists.me/&#34;&gt;BirdLists&lt;/a&gt; is no exception, place the onus of maintaining these lists on you. This can become a burden.&lt;/p&gt;

&lt;h4 id=&#34;smart-lists&#34;&gt;Smart Lists&lt;/h4&gt;

&lt;p&gt;What if we could do something better? What if, rather than having to tell the application which lists to add a record to, it just &lt;em&gt;knew&lt;/em&gt;? What I&amp;rsquo;m thinking of is something akin to the &amp;lsquo;smart mailbox&amp;rsquo; feature your email client may have. You would define a set of rules, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Must be seen in 2016&lt;/li&gt;
&lt;li&gt;Must be seen in the UK&lt;/li&gt;
&lt;li&gt;Must be on the &lt;a href=&#34;https://www.bou.org.uk/british-list/&#34;&gt;BOU list&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And it would apply these rules to your records, automatically maintaining your 2016 year list. Want to tweak the rules? No problem, edit the parameters and the list will automatically update.&lt;/p&gt;

&lt;p&gt;If we have this feature it means the only thing you have to do is add your records and your lists will take care of themselves. Bliss.&lt;/p&gt;

&lt;h3 id=&#34;photos&#34;&gt;Photos&lt;/h3&gt;

&lt;p&gt;A lot of birders have started getting into photography. Whether that be through some serious SLR telephoto lens or digiscoping (a practice of attaching a camera to your telescope), bird photography is extremely popular.&lt;/p&gt;

&lt;p&gt;Birdr will allow you to upload as many photos of your birds as you like. As they&amp;rsquo;re attached to records we can build up a gallery of photos of every species. And give you a public gallery of your photos for people to comment and like.&lt;/p&gt;

&lt;h3 id=&#34;trip-reports&#34;&gt;Trip Reports&lt;/h3&gt;

&lt;p&gt;Birdr will allow you to group records into a &amp;lsquo;trip&amp;rsquo;. This trip will be a collection of maps, photos, lists and notes. You will be able to share this with your friends, or print it as a PDF. This could form a memoir of your birding holidays. Eventually, Birdr will house a library of trip reports from across the world. Off to Chile? Check out reports from other birders who have been there.&lt;/p&gt;

&lt;h3 id=&#34;clubs&#34;&gt;Clubs&lt;/h3&gt;

&lt;p&gt;There are tonnes of bird clubs in the UK (and worldwide); my dad has started two himself! The concept is fairly simple. You form a club that has a designated recording area and your members report what species they see within this area. At the end of the year the club produces an annual report.&lt;/p&gt;

&lt;p&gt;The problem is there is a lot of work for some poor soul who has been nominated by the club as the record keeper. Each year they must collate the records - not always submitted digitally - and produce a report. Wouldn&amp;rsquo;t it be great if you could automate this?&lt;/p&gt;

&lt;p&gt;Birdr will allow people to form clubs. You will be able to draw on a map to define your recording area. You will be able to invite and manage your users, perhaps even &lt;a href=&#34;https://stripe.com/gb&#34;&gt;managing payments&lt;/a&gt;. All records will be available in monthly and yearly reports to all members, meaning your club record keeper is able to go out and enjoy birding!&lt;/p&gt;

&lt;h3 id=&#34;gamification&#34;&gt;Gamification&lt;/h3&gt;

&lt;p&gt;Personally, I find bird watching a difficult hobby to get into. Unless you know someone who is a keen birder it can be extremely daunting. A concept in modern applications is gamification. To gamify something is to attach virtual rewards and targets to a hobby or process. For example, the popular software development Q&amp;amp;A site, &lt;a href=&#34;http://stackoverflow.com/&#34;&gt;StackOverflow&lt;/a&gt;, has a great system whereby you earn badges for answering questions and helping to maintain the site.&lt;/p&gt;

&lt;p&gt;Birdr will try and introduce the concept of gamification to bird watching. You will be able to earn badges for recording species, and there will be fun achievements for meeting certain criteria. For example, earning a &amp;lsquo;flying kites&amp;rsquo; badge for reporting a Kite during high winds.&lt;/p&gt;

&lt;p&gt;The hope is this will help on board new birders by suggesting badges they can aim for. These badges will get progressively harder and by the time they&amp;rsquo;ve earned the last one they&amp;rsquo;ll be professionals!&lt;/p&gt;

&lt;h3 id=&#34;rare-bird-alerts&#34;&gt;Rare bird alerts&lt;/h3&gt;

&lt;p&gt;One of the nice things about having a community of birders adding records into a central system is that providing rare bird alerts becomes trivial. Rare bird alerts is something that many keen birders pay good money for. Birdr will provide notification of rare species over push notification and text message - straight to your phone. This is something I have already implemented successfully on the &lt;a href=&#34;http://nenbc.co.uk/&#34;&gt;NENBC&lt;/a&gt; website. These notifications should be configurable at the club and individual level. Don&amp;rsquo;t care about specific species? Turn off the notifications.&lt;/p&gt;

&lt;h4 id=&#34;reputation&#34;&gt;Reputation&lt;/h4&gt;

&lt;p&gt;One of the tricky aspects of a rare bird alert system is that sometimes newer birders can misidentify species. To send out a notification of a rare bird erroneously could be disastrous as many birders travel long distances to see them. To combat this I&amp;rsquo;ve thought about a reputation system. Newer birders will have a low reputation and so rare birds wont be notified immediately. Over time they will earn reputation points so that when they do report a mega rarity we can trust it and let people know.&lt;/p&gt;

&lt;h3 id=&#34;more-advanced-features&#34;&gt;More advanced features&lt;/h3&gt;

&lt;h4 id=&#34;image-recognition&#34;&gt;Image Recognition&lt;/h4&gt;

&lt;p&gt;Recently, Amazon Web Services &lt;a href=&#34;https://aws.amazon.com/blogs/aws/amazon-rekognition-image-detection-and-recognition-powered-by-deep-learning/&#34;&gt;announced a new service for image recognition&lt;/a&gt;. This got me thinking, would it be possible to use such a service to try and identify species of birds in photos? It&amp;rsquo;s a long shot, as most bird photos tend to be of small brown or black objects in the sky. Nonetheless, it is an interesting concept and one I hope to pursue.&lt;/p&gt;

&lt;p&gt;Perhaps in the future you will be able to add records simply by uploading photos. The photo would contain date &amp;amp; time, location and we can use image recognition to identify the species. That would mean updating your bird lists simply becomes a case of plugging in your camera and clicking a button.&lt;/p&gt;

&lt;h4 id=&#34;machine-learning&#34;&gt;Machine Learning&lt;/h4&gt;

&lt;p&gt;Machine Learning (ML) is another interesting concept. There are several areas where I feel ML could be utilised in Birdr. We could use it to predict which species might be seen at a given location on a given day. This could form a sort of &amp;ldquo;what should I expect to see?&amp;rdquo; feature. It could also be used to identify dubious records. This could provide a safety net for new birders who are about to report an unlikely sighting.&lt;/p&gt;

&lt;p&gt;Machine learning is a very hot topic in software development right now and something I will be aiming to use extensively in Birdr.&lt;/p&gt;

&lt;h3 id=&#34;any-other-ideas&#34;&gt;Any other ideas?&lt;/h3&gt;

&lt;p&gt;These are some of the things I&amp;rsquo;ve been thinking about over the years but I would love to hear from you. If you have any ideas please leave a comment below.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Welcome to Birdr</title>
      <link>http://blog.birdr.co.uk/post/welcome-to-birdr/</link>
      <pubDate>Tue, 13 Dec 2016 10:28:43 +0000</pubDate>
      
      <guid>http://blog.birdr.co.uk/post/welcome-to-birdr/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;http://blog.birdr.co.uk/images/post/welcome-to-birdr.jpg&#34; alt=&#34;A mug outside on a tree that reads &amp;quot;The adventure begins&amp;quot;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve been curious about bird watching my whole life. Both my parents are keen twitchers and I was often taken on thinly-veiled &amp;lsquo;holidays&amp;rsquo; to cold &amp;amp; windy places all in the pursuit of finding some obscure little brown bird. As I&amp;rsquo;ve grown older I&amp;rsquo;ve found myself becoming fascinated with trying to build software to improve a bird watchers life, which I&amp;rsquo;ve come to refer to as &lt;em&gt;birdtech&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;In my opinion, bird watching is a hobby that is perfectly suited to technology. It is a hobby based on recording bird sightings including date &amp;amp; time, location and photographs - things that a modern smartphone excels at. Despite this, very little (decent) software exists for bird watchers. There are a host of listing tools, most of which are clunky desktop applications or overly complicated for all but the most avid &lt;em&gt;listers&lt;/em&gt;. Over the past 10 years I&amp;rsquo;ve made several attempts to change this.&lt;/p&gt;

&lt;h3 id=&#34;i-b-i-s&#34;&gt;I.B.I.S.&lt;/h3&gt;

&lt;p&gt;My first foray into the world of birdtech was back in 2003 during my undergraduate degree. As part of a module on A.I. I wrote a &lt;a href=&#34;https://en.wikipedia.org/wiki/Lisp_(programming_language)&#34;&gt;LISP&lt;/a&gt; program called the Intelligent Bird Identification System (I.B.I.S.). The premise behind I.B.I.S. was that a bird watching novice could enter a number of details about a bird they could not identify and the system would inform them of what they had seen. Ironically, I.B.I.S. was neither intelligent nor could it identify any birds. Nonetheless, the seed was planted and my passion for birdtech was born.&lt;/p&gt;

&lt;h3 id=&#34;i-b-i-s-ii&#34;&gt;I.B.I.S. II&lt;/h3&gt;

&lt;p&gt;During my final year of university in 2006 I re-branded I.B.I.S. into the Integrated Bird Information System. Despite its spectacularly vague name, I.B.I.S. II was far more useful. It was a clunky desktop application (written in &lt;a href=&#34;https://en.wikipedia.org/wiki/C_Sharp_(programming_language)&#34;&gt;C# .NET&lt;/a&gt;) that allowed a bird watcher to add their records on a map. The application would then produce lists for you, such as &lt;em&gt;year lists&lt;/em&gt;. Technically speaking it was quite a complex application. I effectively ended up building Google maps in OpenGL&amp;hellip; only limited to the Greater Peterborough area!&lt;/p&gt;

&lt;h3 id=&#34;birdr&#34;&gt;Birdr&lt;/h3&gt;

&lt;p&gt;Birdtech took a back seat in my life for some years while I focused on my Ph.D., but in 2011 it came back with a vengeance. Together with a friend, &lt;a href=&#34;https://github.com/itszootime&#34;&gt;Richard Jones&lt;/a&gt;, I started work on our first Web-based birdtech application. &lt;a href=&#34;http://birdr.co.uk/&#34;&gt;Birdr&lt;/a&gt; was an excuse for me and Richard to spend time learning a new technology, &lt;a href=&#34;http://rubyonrails.org/&#34;&gt;Ruby on Rails&lt;/a&gt;, while working on a project that interested us.&lt;/p&gt;

&lt;p&gt;Birdr allowed a user to record their sightings on Google maps, as well as add photos, create bird clubs, comment, like and various other interactions you&amp;rsquo;d expect from a modern application. We had a trial run with a few Peterborough Bird Club members and it was generally well-received. After a year of development we ceased working on it for reasons I can&amp;rsquo;t recall. A real shame.&lt;/p&gt;

&lt;h3 id=&#34;birdlists-and-friends&#34;&gt;BirdLists and friends&lt;/h3&gt;

&lt;p&gt;Following on from birdr I&amp;rsquo;ve created several other birding Websites, all in Ruby on Rails. The first of these is &lt;a href=&#34;http://birdlists.me/&#34;&gt;BirdLists&lt;/a&gt;. The premise of BirdLists was to simplify the somewhat complicated interface of birdr into something even my dad could use (literally).&lt;/p&gt;

&lt;p&gt;My latest app is a bespoke site for the &lt;a href=&#34;http://nenbc.co.uk/&#34;&gt;North East Norfolk Bird Club (NENBC)&lt;/a&gt;. This started off in the same vein as BirdLists but with additional club-based functionality. However, over the years we&amp;rsquo;ve progressively added new functionality so that it is almost identical to where birdr was 5 years ago!&lt;/p&gt;

&lt;p&gt;Throughout the years I have made several attempts at recreating birdr, but none have ever made it off the ground.&lt;/p&gt;

&lt;h3 id=&#34;no-more-please&#34;&gt;No more, please!&lt;/h3&gt;

&lt;p&gt;Despite birdr failing to take off, I still believe there is scope for a birding community site. I think part of the reason birdr (and subsequent mutations) have failed is that I always saw it as an opportunity to make money. I would often get bogged down by trivial matters such as &amp;ldquo;How much should we charge?&amp;rdquo; or &amp;ldquo;Which features should be premium?&amp;rdquo; On reflection, the most valuable thing I got out of birdr was the opportunity to learn new technologies inside and out. It is a project of sufficient scope that it requires an in-depth knowledge of the tech which is an invaluable learning aid.&lt;/p&gt;

&lt;p&gt;So, this time I am going to approach birdr not as a means to make money, but as an opportunity to learn new skills and improve myself as a programmer. On that note, all source code produced will be open source - as in free - and I will document my journey here on this blog. Who knows, perhaps I will find a like-minded individual to share the journey with.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>